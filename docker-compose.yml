x-noctura-version: &noctura-version "0.1.0"

services:
  gocryptfs:
    build:
      context: ./docker/gocryptfs
    container_name: noctura-gocryptfs
    restart: unless-stopped
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      - ENCRYPTED_DIR=/encrypted
      - DECRYPTED_DIR=/decrypted
      - PASSWORD=${ENCRYPTION_KEY}
    volumes:
      - encrypted-data:/encrypted
      - couchdb-data:/decrypted
    networks:
      - noctura-net
    healthcheck:
      test: ["CMD", "mountpoint", "-q", "/decrypted"]
      interval: 2s
      timeout: 3s
      retries: 30
      start_period: 10s

  couchdb:
    image: couchdb:3.3
    container_name: noctura-couchdb
    restart: unless-stopped
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - NOCTURA_VERSION=0.1.0
    volumes:
      - couchdb-data:/opt/couchdb/data
      - couchdb-config:/opt/couchdb/etc/local.d
    networks:
      - noctura-net
    depends_on:
      gocryptfs:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984/_up"]
      interval: 2s
      timeout: 3s
      retries: 20
      start_period: 5s

  obsidian:
    build:
      context: ./docker/obsidian
      args:
        - OBSIDIAN_VERSION=${OBSIDIAN_VERSION:-1.7.7}
        - LIVESYNC_VERSION=${LIVESYNC_VERSION:-0.25.20}
    platform: linux/amd64
    container_name: noctura-obsidian
    restart: unless-stopped
    environment:
      - VAULT_NAME=${VAULT_NAME:-noctura}
      - COUCHDB_URL=http://couchdb:5984
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - COUCHDB_DATABASE=${COUCHDB_DATABASE:-noctura}
      - VNC_PASSWORD=${VNC_PASSWORD}
      - DISPLAY=:99
      - NOCTURA_VERSION=0.1.0
    volumes:
      - obsidian-vaults:/root/vaults
    networks:
      - noctura-net
    depends_on:
      couchdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 2s
      timeout: 3s
      retries: 20
      start_period: 10s

  caddy:
    build:
      context: ./docker/caddy
    container_name: noctura-caddy
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - TLS_EMAIL=${TLS_EMAIL:-}
    volumes:
      - ./docker/caddy/Caddyfile.${ENVIRONMENT:-dev}:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
      - caddy-logs:/var/log/caddy
    networks:
      - noctura-net
    depends_on:
      couchdb:
        condition: service_started
      obsidian:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 2s
      timeout: 3s
      retries: 15
      start_period: 10s

networks:
  noctura-net:
    driver: bridge

volumes:
  couchdb-data:
  couchdb-config:
  caddy-data:
  caddy-config:
  caddy-logs:
  encrypted-data:
  obsidian-vaults:
